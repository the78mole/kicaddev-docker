# Makefile f체r Sphinx Dokumentation

# You can set these variables from the command line, and also
# from the environment for the first two.
SPHINXOPTS    ?=
SPHINXBUILD  ?= sphinx-build
SOURCEDIR    = source
BUILDDIR     = build

# Pr체fe ob sphinx-build im lokalen bin-Verzeichnis verf체gbar ist
ifneq (,$(wildcard /home/kicad/.local/bin/sphinx-build))
    SPHINXBUILD = /home/kicad/.local/bin/sphinx-build
else ifneq (,$(wildcard ~/.local/bin/sphinx-build))
    SPHINXBUILD = ~/.local/bin/sphinx-build
endif

# Put it first so that "make" without argument is like "make help".
help:
	@$(SPHINXBUILD) -M help "$(SOURCEDIR)" "$(BUILDDIR)" $(SPHINXOPTS) $(O)

.PHONY: help Makefile

# Catch-all target: route all unknown targets to Sphinx using the new
# "make mode" option.  $(O) is meant as a shortcut for $(SPHINXOPTS).
%: Makefile
	@$(SPHINXBUILD) -M $@ "$(SOURCEDIR)" "$(BUILDDIR)" $(SPHINXOPTS) $(O)

# Lokale Entwicklung mit Auto-Rebuild
livehtml:
	sphinx-autobuild "$(SOURCEDIR)" "$(BUILDDIR)/html" $(SPHINXOPTS) $(O)

# Dokumentation vollst채ndig neu erstellen
clean-build:
	rm -rf "$(BUILDDIR)"
	@$(SPHINXBUILD) -M html "$(SOURCEDIR)" "$(BUILDDIR)" $(SPHINXOPTS) $(O)

# PDF-Generation (falls LaTeX installiert ist)
latexpdf:
	@$(SPHINXBUILD) -M latexpdf "$(SOURCEDIR)" "$(BUILDDIR)" $(SPHINXOPTS) $(O)
